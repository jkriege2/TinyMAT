name: BUILD-MSVC-CI

on: [push, pull_request]

permissions:
  checks: write
  
jobs:
  ci:
    if: >-
      ! contains(toJSON(github.event.commits.*.message), '[skip ci]') &&
      ! contains(toJSON(github.event.commits.*.message), '[skip github]')
    name: MSVC 2022
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {gen: Visual Studio 17 2022, arch: x64, shared: ON}
          - {gen: Visual Studio 17 2022, arch: x64, shared: OFF}
    steps:
    - name: Install Qt Win64
      if: ${{ matrix.arch=='x64' }}
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        host: 'windows'
        arch: 'win64_msvc2019_64'
    - name: Install Qt Win32
      if: ${{ matrix.arch=='Win32' }}
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        host: 'windows'
        arch: 'win32_msvc2019_32'
    - name: checkout
      uses: actions/checkout@v4
    - name: Configure
      run: |
        mkdir install
        cmake -G "${{matrix.gen}}" -A ${{matrix.arch}} -DBUILD_SHARED_LIBS=${{matrix.shared}} "-DCMAKE_INSTALL_PREFIX=./install" -B build
    - name: Build Release
      run: |
           cmake --build build --config Release --verbose           
    - name: Install Release
      run: |
        cmake --install build --config Release
        cd install
        ls -R
    - name: Test CMake-build against TinyMAT
      run: |
        cd examples
        cd extcmake_tinymat_test
        mkdir build
        cd build
        pwd
        echo ${{github.workspace}}
        cmake -G "${{matrix.gen}}" -A ${{matrix.arch}} "-DCMAKE_PREFIX_PATH=${{github.workspace}}/install/" -B . -S ..
        cmake --build . --config Release --verbose  
    - name: Test CMake-build against TinyMAT, using FetchContent-API
      if: success() || failure() # always run even if the previous step fails
      run: |
        cd examples
        cd extcmake_fetchcontent_tinymat_test
        mkdir build 
        cd build
        cmake -G "${{matrix.gen}}" -A ${{matrix.arch}} -B . -S ..
        cmake --build . --config Release --verbose  

#    - name: Run Release tests
#      run: |
#        cd install
#        cd bin
#        pwd
#        ls 
#        .\tinytiffwriter_test --simple
#        .\tinytiffreader_test --simple
#    - name: Publish Test Report
#      uses: mikepenz/action-junit-report@v4
#      if: success() || failure() # always run even if the previous step fails
#      with:
#        report_paths: '**/install/bin/*.xml'
